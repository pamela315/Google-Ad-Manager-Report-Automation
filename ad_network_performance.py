# -*- coding: utf-8 -*-
"""Ad_Network_Performance.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hk89WBKEpZYCu7M9Zv7JqjefyxJ1FxwS
"""

import json
import urllib
import csv
import requests
import datetime
from datetime import timezone, datetime
import pandas as pd

from pandas.io.json import json_normalize

"""# AndBeyond 
> Input the necessary information to the form for AndBeyond.


"""

User_name = 'pamelatsui@hket-work.com' #@param
Password = 'advadv1234' #@param
From_date = '2021-02-13' #@param{type:'date'}
To_date = "2021-02-20" #@param{type:'date'}

param ={
    'user_name':User_name, 
    'password':Password,
    'from_date':From_date,
    'to_date':To_date
    }

ar = requests.post('https://login.andbeyond.media/report_api/get_report_data',data=param)
andbeyond = ar.json()
andbeyondTemp = andbeyond['data']


#print(andbeyondTemp.keys())
# 19616 = ULifestyle
andbeyondul = pd.DataFrame.from_dict(andbeyondTemp['19616']).T
# 19624 = HKET
andbeyondet = pd.DataFrame.from_dict(andbeyondTemp['19624']).T
# 20242 = SkyPost
andbeyondsp = pd.DataFrame.from_dict(andbeyondTemp['20242']).T

andbeyondFinal = pd.concat(([andbeyondul,andbeyondet,andbeyondsp]), ignore_index=True)
andbeyondFinal['Ad Network'] = "AndBeyond"

andbeyondFinal = andbeyondFinal.rename(columns={'opportunity_name': 'Line Item', 'of_date': 'Date', 'monetized': 'Sold Impressions','erpm':'CPM'})

andbeyondFinal = andbeyondFinal [["Date","Ad Network", "Line Item", "Sold Impressions", "revenue"]]

andbeyondFinal

#print (final.columns.values.tolist())

#json.dumps(andbeyond, indent=3)
#dataframe = pd.DataFrame.from_dict(andbeyond['data'])
#dataframe
#pd.DataFrame.from_dict(andbeyond, orient='index')
#df = pd.json_normalize(andbeyond)
#https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.json_normalize.html

"""# Innity

> Input the necessary information to the form for Innity.


"""

Access_key = '%2B3fL57bbVSLnJbTiywj4%2B0yqqlOdKMC0H1K6d0Jn' #@param
Start = '20200901' #@param
End = '20201130' #@param

# Extract the ad placement in advenue system
innity = requests.get('https://www.advenueplatform.com/tools/get-zone-list?key={}&json=1'.format(Access_key))
result = json.loads(innity.text)
#print(json.dumps(result, indent=3))
j = pd.json_normalize(result)
b = list(j.id)

lt_innity = pd.DataFrame()

for y in b:
  innity_report = requests.get('https://www.advenueplatform.com/tools/report?key={}&startDate={}&endDate={}&zoneId={}&json=1'.format(Access_key, Start, End, y))
  result2 = json.loads(innity_report.text)
  df_innity = pd.DataFrame.from_dict(result2)
  df_innity['id'] = y
  lt_innity = lt_innity.append([df_innity],ignore_index=True)


innityFinal = lt_innity.merge(j[['id','name']], on='id')
innityFinal['Ad Network'] = 'Innity'

innityFinal = innityFinal.rename(columns={'date': 'Date', 'impression': 'Sold Impressions', 'click': 'Clicks','name':'Line Item', 'earnings': 'revenue'})

innityFinal = innityFinal[["Date","Ad Network", "Line Item", "Sold Impressions", "revenue", "Clicks"]]

innityFinal

"""# Appier"""

Client_ID = 'pd3aw1edx68.publisher.appier.com' #@param
Secret_ID = 'qcmyoi3evyn6zcpsxc237zw71zh8wrhz' #@param
Start_date = '20201201' #@param
End_date = '20201231' #@param
Timezone = 'UTC%2B8' #@param

headers = {
   'appier-client-id': Client_ID,
   'appier-secret-id': Secret_ID
}

res = requests.get('https://pubdash.apx.appier.net/api/v1/performance/list?from={}&to={}&timezone={}'.format(Start_date, End_date, Timezone), headers=headers)

appier = json.loads(res.text)
print(appier.keys())

appierTemp = appier['stat']
print(appierTemp)
print(appier['zones'])

appierFinal = pd.DataFrame()
appierDataTemp = []

for key in appierTemp.keys():
  appierDataTemp = appierTemp[key]
  appierDataTemp['7891']["Date"] = key
  appierDataTemp['7891']["Ad Network"] = "Appier"
  appierDataTemp['7891']["Line Item"] = "HKET"
  appierDataTemp['7892']["Date"] = key
  appierDataTemp['7892']["Line Item"] = "U Lifestyle"
  appierDataTemp['7892']["Ad Network"] = "Appier"
  appierDataTemp['7893']["Date"] = key
  appierDataTemp['7893']["Line Item"] = "SkyPost"
  appierDataTemp['7893']["Ad Network"] = "Appier"
  temp = pd.DataFrame.from_dict(appierDataTemp).T
  appierFinal = pd.concat([appierFinal, temp], ignore_index=True)


appierFinal = appierFinal.rename(columns={'impression': 'Sold Impressions','click':'Clicks'})

appierFinal = appierFinal [["Date","Ad Network", "Line Item", "Sold Impressions", "revenue", "Clicks"]]


appierFinal

#json.dumps(result_data, indent=3)
#pd.json_normalize(result_data['stat'])
#zones = [dict({'zoneid':key}, **value) for key, value in result_data['zones'].items()]
#zone_keys = zones[0].keys()

"""# TEADS

> Input the necessary information to the form for TEADS

# Vidoomy
"""

vheader = {"Content-type": "application/x-www-form-urlencoded",
          "Accept": "text/plain"} 
vd = requests.post('https://api.vidoomy.com/api/site', headers=vheader, data={'user':'hket','password':'nSCULtatORIg','date_from':'2020/09/01','date_to':'2020/09/10'})

response_json = vd.text

print(response_json)

now = datetime.now()
date = datetime(2020,11,1)
timestamp = datetime.timestamp(now)
timestamp2 = datetime.timestamp(date)
print(int(timestamp))
print(int(timestamp2))

"""# ucfunnel"""

login = requests.post('https://api.aralego.com/v2.0/login', data={"email":"pamelatsui@hket.com", "password":"Python_101"})
token = login.json()['token']
print(token)

Start_from = 1604188800 #@param
End_to = 1606780800 #@param
GroupByPublisher = True 
GroupBySite = True 
GroupByDay = True 
  
ucheader = {
    "Authorization":token,
    "Accept":"application/json",
    "Content-Type":"application/json"
}
ucbody = {
    "timeRangeStart": Start_from,
    "timeRangeEnd": End_to,
    "groupByPublisher": GroupByPublisher,
    "groupBySite": GroupBySite,
    "groupByDay": GroupByDay
}

ucfunnel = requests.post('https://api.aralego.com/v2.0/partner/report', headers=ucheader,data=ucbody,timeout=2.50)
print(ucfunnel.text)

"""Combine and Move to Google Sheet

"""

from google.colab import auth
auth.authenticate_user()

import gspread
from gspread_dataframe import get_as_dataframe, set_with_dataframe
from oauth2client.client import GoogleCredentials

gc = gspread.authorize(GoogleCredentials.get_application_default())

Final = pd.concat(([andbeyondFinal,appierFinal,innityFinal]), ignore_index=True)

sheet = gc.open('Ad Network Revenue From Colab').worksheet('RAW')
all = sheet.get_all_values()
end = len(all) + 1

set_with_dataframe(sheet,Final,row=end, col=1, include_index=False, include_column_header=False, resize=False, allow_formulas=True)
print("Done")